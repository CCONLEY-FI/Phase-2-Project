{"ast":null,"code":"var _jsxFileName = \"/Users/christopherconley/Development/code/phase-2/phase-2-project/phase2project/src/Components/GameList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameList() {\n  _s();\n  const [games, setGames] = useState([]); // State to store our games\n\n  useEffect(() => {\n    // Fetching games from the backend on component mount\n    const fetchGames = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/games'); // Ensure this URL matches your json-server endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGames(data); // Storing fetched games in the state\n      } catch (error) {\n        console.log(error); // Error handling\n      }\n    };\n    fetchGames(); // Call the asynchronous function to fetch the games\n  }, []); // Empty array as second argument means this effect will only run once\n\n  // Displaying the games in a list format below\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: game.image,\n          alt: game.name,\n          style: {\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: game.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", game.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Review: \", game.review]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, game.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(GameList, \"Qv+Imzbbm47aMqW5lWWxooDvX6M=\");\n_c = GameList;\nexport default GameList;\nvar _c;\n$RefreshReg$(_c, \"GameList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GameList","_s","games","setGames","fetchGames","response","fetch","ok","Error","status","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","src","image","alt","name","style","width","height","rating","review","id","_c","$RefreshReg$"],"sources":["/Users/christopherconley/Development/code/phase-2/phase-2-project/phase2project/src/Components/GameList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction GameList() {\n  const [games, setGames] = useState([]); // State to store our games\n\n  useEffect(() => {\n    // Fetching games from the backend on component mount\n    const fetchGames = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/games'); // Ensure this URL matches your json-server endpoint\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGames(data); // Storing fetched games in the state\n      } catch (error) {\n        console.log(error); // Error handling\n      }\n    };\n\n    fetchGames(); // Call the asynchronous function to fetch the games\n  }, []); // Empty array as second argument means this effect will only run once\n\n  // Displaying the games in a list format below\n  return (\n    <div>\n      <h1>Game List</h1>\n      <ul>\n        {games.map((game) => (\n          <li key={game.id}>\n            <img src={game.image} alt={game.name} style={{ width: '50px', height: '50px' }} />\n            <h2>{game.name}</h2>\n            <p>Rating: {game.rating}</p>\n            <p>Review: {game.review}</p>\n            {/* Additional game details */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default GameList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;QAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;IAEDR,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAAgB,QAAA,EACGb,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAKuB,GAAG,EAAED,IAAI,CAACE,KAAM;UAACC,GAAG,EAAEH,IAAI,CAACI,IAAK;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClFpB,OAAA;UAAAgB,QAAA,EAAKM,IAAI,CAACI;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBpB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACM,IAAI,CAACQ,MAAM;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BpB,OAAA;UAAAgB,QAAA,GAAG,UAAQ,EAACM,IAAI,CAACS,MAAM;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJrBE,IAAI,CAACU,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CAtCQD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}