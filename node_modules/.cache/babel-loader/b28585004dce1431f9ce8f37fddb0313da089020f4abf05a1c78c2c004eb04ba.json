{"ast":null,"code":"var _jsxFileName = \"/Users/christopherconley/Development/code/phase-2/phase-2-project/phase2project/src/Components/GameManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GameForm from './GameForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameManagement() {\n  _s();\n  const [message, setMessage] = useState(''); // For response messages or errors\n\n  // Function to POST new game data\n  const addGame = async gameData => {\n    const response = await fetch('/games', {\n      // Ensure this URL matches your json-server endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(gameData)\n    });\n    if (response.ok) {\n      const newGame = await response.json();\n      setMessage(`Added: ${newGame.name}`); // Possible success message\n      // Optionally, append newGame to a local state array of games if necessary\n    } else {\n      setMessage(`Failed to add game. Status code: ${response.status}`);\n    }\n\n    // Automatically clear the message after a few seconds\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameForm, {\n      onSubmit: addGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(GameManagement, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = GameManagement;\nexport default GameManagement;\nvar _c;\n$RefreshReg$(_c, \"GameManagement\");","map":{"version":3,"names":["React","useState","GameForm","jsxDEV","_jsxDEV","GameManagement","_s","message","setMessage","addGame","gameData","response","fetch","method","headers","body","JSON","stringify","ok","newGame","json","name","status","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/christopherconley/Development/code/phase-2/phase-2-project/phase2project/src/Components/GameManagement.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GameForm from './GameForm';\n\nfunction GameManagement() {\n  const [message, setMessage] = useState(''); // For response messages or errors\n\n  // Function to POST new game data\n  const addGame = async (gameData) => {\n    const response = await fetch('/games', { // Ensure this URL matches your json-server endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(gameData),\n    });\n\n    if (response.ok) {\n      const newGame = await response.json();\n      setMessage(`Added: ${newGame.name}`); // Possible success message\n      // Optionally, append newGame to a local state array of games if necessary\n    } else {\n      setMessage(`Failed to add game. Status code: ${response.status}`);\n    }\n\n    // Automatically clear the message after a few seconds\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  };\n\n  return (\n    <div>\n      <h2>Manage Games</h2>\n      <GameForm onSubmit={addGame} />\n      {message && <p>{message}</p>}\n      {/* Additional UI elements for editing and removing games can be added here */}\n    </div>\n  );\n}\n\nexport default GameManagement;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMQ,OAAO,GAAG,MAAOC,QAAQ,IAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;MAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACrCZ,UAAU,CAAE,UAASW,OAAO,CAACE,IAAK,EAAC,CAAC,CAAC,CAAC;MACtC;IACF,CAAC,MAAM;MACLb,UAAU,CAAE,oCAAmCG,QAAQ,CAACW,MAAO,EAAC,CAAC;IACnE;;IAEA;IACAC,UAAU,CAAC,MAAM;MACff,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEJ,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxB,OAAA,CAACF,QAAQ;MAAC2B,QAAQ,EAAEpB;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9BrB,OAAO,iBAAIH,OAAA;MAAAoB,QAAA,EAAIjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV;AAACtB,EAAA,CAnCQD,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}