{"ast":null,"code":"var _jsxFileName = \"/Users/christopherconley/Development/code/phase-2/phase-2-project/phase2project/src/Components/GameDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState(null); // State to store the game details\n  const [isLoading, setIsLoading] = useState(true); // State to manage loading state\n  const [error, setError] = useState(null); // State to store any errors\n\n  useEffect(() => {\n    // Fetching game details based on the ID\n    const fetchGameDetails = async () => {\n      try {\n        const response = await fetch(`/games/${id}`); // Adjust endpoint as necessary\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGame(data); // Storing fetched game details in the state\n      } catch (error) {\n        setError(error.message); // Error handling\n      } finally {\n        setIsLoading(false); // Ensure loading state is updated\n      }\n    };\n    fetchGameDetails(); // Call the asynchronous function to fetch the game details\n  }, [id]); // This effect depends on the id parameter\n\n  // Handle loading and error states\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n\n  // Display game details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: game ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: game.image,\n        alt: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", game.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Review: \", game.review]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Game not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(GameDetails, \"C3bs5Pw8qAveljLiyf4MN4oaLb4=\", false, function () {\n  return [useParams];\n});\n_c = GameDetails;\nexport default GameDetails;\nvar _c;\n$RefreshReg$(_c, \"GameDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","GameDetails","_s","id","game","setGame","isLoading","setIsLoading","error","setError","fetchGameDetails","response","fetch","ok","Error","status","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","image","alt","rating","review","_c","$RefreshReg$"],"sources":["/Users/christopherconley/Development/code/phase-2/phase-2-project/phase2project/src/Components/GameDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction GameDetails() {\n  const { id } = useParams();\n  const [game, setGame] = useState(null); // State to store the game details\n  const [isLoading, setIsLoading] = useState(true); // State to manage loading state\n  const [error, setError] = useState(null); // State to store any errors\n\n  useEffect(() => {\n    // Fetching game details based on the ID\n    const fetchGameDetails = async () => {\n      try {\n        const response = await fetch(`/games/${id}`); // Adjust endpoint as necessary\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGame(data); // Storing fetched game details in the state\n      } catch (error) {\n        setError(error.message); // Error handling\n      } finally {\n        setIsLoading(false); // Ensure loading state is updated\n      }\n    };\n\n    fetchGameDetails(); // Call the asynchronous function to fetch the game details\n  }, [id]); // This effect depends on the id parameter\n\n  // Handle loading and error states\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  // Display game details\n  return (\n    <div>\n      {game ? (\n        <div>\n          <h1>{game.name}</h1>\n          <img src={game.image} alt={game.name} />\n          <p>Rating: {game.rating}</p>\n          <p>Review: {game.review}</p>\n          {/* Additional game details as required */}\n        </div>\n      ) : (\n        <p>Game not found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default GameDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}